{
    "description": "Pipeline for parsing hulft messages.",
    "processors": [
        {
            "grok": {
                "field": "message",
                "patterns": [
                    "%{SYSLOGTIMESTAMP:hulft.log.syslogtimestamp} %{SYSLOGHOST:hulft.log.sysloghostname} <%{WORD:hulft.log.facility}.%{WORD:hulft.log.priority}> +%{NOTSPACE:hulft.log.systemprogram}:ID=%{NOTSPACE:hulft.log.id} +DATE=%{HULFT_TIMESTAMP:hulft.log.timestamp} +CLASS=%{NOTSPACE:hulft.log.class} +HULCHARACTER=(?:%{NOTSPACE:hulft.log.hulcharacter})? +PNAME=%{NOTSPACE:hulft.log.pname} +PID=%{POSINT:hulft.log.pid} +DTLCODE=%{NOTSPACE:hulft.log.dtlcode} +MYHOST=%{SYSLOGHOST:hulft.log.myhost} +UID=%{NUMBER:hulft.log.uid}((?: +REPLY=%{GREEDYDATA:hulft.log.reply})|(?: +REQUEST=%{GREEDYDATA:hulft.log.request})|(?: +MSG=%{GREEDYDATA:hulft.log.msg} FILEID=%{NOTSPACE:hulft.log.fileid}(?: HOSTNAME=%{SYSLOGHOST:hulft.log.hostname} FILENAME=%{GREEDYDATA:hulft.log.filename} STS=%{NUMBER:hulft.log.sts} STSMSG=%{NOTSPACE:hulft.log.stsmsg} DSTS=%{NUMBER:hulft.log.dsts} DSTSMSG=%{GREEDYDATA:hulft.log.dstsmsg}))?)"
                ],
                "pattern_definitions" : {
                    "GREEDYMULTILINE" : "(.|\n)*",
                    "HULFT_TIMESTAMP" : "%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{ISO8601_HOUR}:?%{MINUTE}(?::?%{SECOND})?"
                }
            }
        },
        {
            "date": {
                "field": "hulft.log.timestamp",
                "target_field": "@timestamp",
                "formats": [
                    "yyyy/MM/dd HH:mm:ss"
                ],
                {< if .convert_timezone >}"timezone": "{{ beat.timezone }}",{< end >}
                "ignore_failure": false
            }
        }
    ],
    "on_failure" : [{
        "set" : {
            "field" : "error.message",
            "value" : "{{ _ingest.on_failure_message }}"
        }
    }]
}
